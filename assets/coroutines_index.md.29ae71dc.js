import{_ as s,o as n,c as a,U as l}from"./chunks/framework.76b79cb5.js";const _=JSON.parse('{"title":"Kotlin协程","description":"","frontmatter":{},"headers":[],"relativePath":"coroutines/index.md","filePath":"coroutines/index.md"}'),o={name:"coroutines/index.md"},e=l(`<h1 id="kotlin协程" tabindex="-1">Kotlin协程 <a class="header-anchor" href="#kotlin协程" aria-label="Permalink to &quot;Kotlin协程&quot;">​</a></h1><h2 id="第一个协程程序" tabindex="-1">第一个协程程序 <a class="header-anchor" href="#第一个协程程序" aria-label="Permalink to &quot;第一个协程程序&quot;">​</a></h2><div class="language-kotlin"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">kotlinx.coroutines.</span><span style="color:#A6ACCD;">*</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">fun</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() {</span></span>
<span class="line"><span style="color:#A6ACCD;">    GlobalScope.</span><span style="color:#82AAFF;">launch</span><span style="color:#A6ACCD;"> { </span><span style="color:#676E95;font-style:italic;">// 在后台启动一个新的协程并继续</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">delay</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1000L</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 非阻塞的等待 1 秒钟（默认时间单位是毫秒）</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">println</span><span style="color:#A6ACCD;">(</span><span style="color:#C3E88D;">&quot;World!&quot;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 在延迟后打印输出</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">println</span><span style="color:#A6ACCD;">(</span><span style="color:#C3E88D;">&quot;Hello,&quot;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 协程已在等待时主线程还在继续</span></span>
<span class="line"><span style="color:#A6ACCD;">    Thread.</span><span style="color:#82AAFF;">sleep</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2000L</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 阻塞主线程 2 秒钟来保证 JVM 存活</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><p>详细了解可通过 <a href="https://kotlinlang.org/docs/coroutines-overview.html" target="_blank" rel="noreferrer">Kotlin协程</a></p>`,4),t=[e];function p(c,r,i,A,C,y){return n(),a("div",null,t)}const h=s(o,[["render",p]]);export{_ as __pageData,h as default};
